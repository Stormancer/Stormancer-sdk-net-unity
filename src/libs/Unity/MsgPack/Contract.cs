//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;

namespace System.Diagnostics.Contracts
{
		public static class Contract
		{
				public static void Assume (bool condition)
				{
						Assume (condition, "");
				}

				public static void Assume (bool condition, string text)
				{
						if (!condition) {
								throw new ArgumentException (text);
						}
				}

				public static void Assert (bool condition)
				{
						Assert (condition, "");
				}

				public static void Assert (bool condition, string text)
				{
						if (!condition) {
								throw new ArgumentException (text);
						}
				}

		public static void EndContractBlock(){
				}
		public static void Ensures(bool condition){
			Ensures (condition, "");
		}
		public static void Ensures(bool condition,string text){
			//Utilisé en fin de methode avec Contract.Result contenant le resultat de la méthode => non emulable sans reecriture.
		}
		public static void Requires(bool condition){
			Requires (condition, "");
		}
		public static void Requires(bool condition, string text){
			if (!condition) {
				throw new ArgumentException (text);
			}

		}
		public static T Result<T>(){
				return default(T);
		}

		public static bool ForAll<T>(IEnumerable<T> conditions, Func<T,bool> predicate){
			return conditions.All (predicate);
		}
		}
}

